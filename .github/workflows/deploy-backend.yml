name: Publish Docker image of axmouth.dev Backend to GHCR then update the image version on server

on: [push]

jobs:
  push_to_registry_and_deploy_to_server:
    if: github.ref == 'refs/heads/master'
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to Github Container Registry with Docker
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      #- name: Pull the previous version of Docker image from Github Container Registry
      #  run: docker pull ghcr.io/axmouth/axmouth.dev-backend || true
      - name: Cache Docker build, to keep builder image
        id: cache-docker
        uses: actions/cache@v1
        with:
          path: /tmp/docker-save
          key: docker-save-${{ hashFiles('Dockerfile') }}
      - name: Build the new version with latest tag
        run: docker build . -t latest --cache-from=backend-build-cache
      - name: Tag and Push the new version with latest tag
        run: docker tag latest backend-build-cache ghcr.io/axmouth/axmouth.dev-backend && docker push ghcr.io/axmouth/axmouth.dev-backend || true && mkdir -p /tmp/docker-save && docker save backend-build-cache -o /tmp/docker-save/snapshot.tar && ls -lh /tmp/docker-save || true
      - run: docker load -i /tmp/docker-save/snapshot.tar || true
        if: steps.cache-docker.outputs.cache-hit == 'true'
      - name: Use docker-compose to deploy remotely
        env:
          BIND_ADDRESS: 0.0.0.0:39051
          CAPTCHA_SECRET: ${{ secrets.CAPTCHA_SECRET }}
          CAPTCHA_VERIFY_URL: https://hcaptcha.com/siteverify
          CONTACT_ADDRESS: ${{ secrets.CONTACT_ADDRESS }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_DURATION: 500
          MAIL_FROM_ADDRESS: noreply@axmouth.dev
          MAIL_FROM_NAME: axmouth.dev
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          RUST_LOG: backend_api=error
          STATIC_FILE_DIR: /var/lib/axmouth/axmouth.dev/static-assets
          STATIC_FILE_ADDRESS: https://axmouth.dev/static
          WEBSITE_URL: axmouth.dev
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
        run: DOCKER_HOST="ssh://$SERVER_USERNAME@$SERVER_IP" mkdir - ~/ssh && echo $SSH_KEY > ~/ssh/id_rsa && touch .env && docker-compose up -d && rm ~/ssh/id_rsa
      #- name: Push to GitHub Packages
      #  uses: docker/build-push-action@v1
      #  with:
      #    username: ${{ github.repository_owner }}
      #    password: ${{ secrets.GHCR_TOKEN }}
      #    registry: ghcr.io
      #    repository: axmouth/axmouth.dev-backend
      #    cache_froms: ghcr.io/axmouth/axmouth.dev-backend
      #    tag_with_ref: true
      #    tags: latest
      #- name: executing remote ssh commands using password
      #  uses: appleboy/ssh-action@master
      #  env:
      #    BIND_ADDRESS: 0.0.0.0:39051
      #    CAPTCHA_SECRET: ${{ secrets.CAPTCHA_SECRET }}
      #    CAPTCHA_VERIFY_URL: https://hcaptcha.com/siteverify
      #    CONTACT_ADDRESS: ${{ secrets.CONTACT_ADDRESS }}
      #    DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #    GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
      #    GITHUB_ACTOR: ${{ github.actor }}
      #    JWT_SECRET: ${{ secrets.JWT_SECRET }}
      #    JWT_DURATION: 500
      #    MAIL_FROM_ADDRESS: noreply@axmouth.dev
      #    MAIL_FROM_NAME: axmouth.dev
      #    MAIL_HOST: ${{ secrets.MAIL_HOST }}
      #    MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      #    MAIL_PORT: ${{ secrets.MAIL_PORT }}
      #    MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      #    RUST_LOG: backend_api=error
      #    STATIC_FILE_DIR: /var/lib/axmouth/axmouth.dev/static-assets
      #    STATIC_FILE_ADDRESS: https://axmouth.dev/static
      #    WEBSITE_URL: axmouth.dev
      #  with:
      #    envs: GHCR_TOKEN,GITHUB_ACTOR,DATABASE_URL,JWT_SECRET,CAPTCHA_SECRET,MAIL_HOST,MAIL_PORT,MAIL_USERNAME,MAIL_PASSWORD
      #    key: ${{ secrets.SSH_KEY }}
      #    host: ${{ secrets.SERVER_IP }}
      #    username: ${{ secrets.SERVER_USERNAME }}
      #    port: ${{ secrets.SERVER_PORT }}
      #    script: |
      #      echo "$GHCR_TOKEN" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      #      docker pull ghcr.io/axmouth/axmouth.dev-backend:latest
      #      cd /var/lib/axmouth/axmouth.dev
      #      rm -r backend
      #      mkdir -p backend
      #      cd backend
      #      git clone https://github.com/Axmouth/axmouth.dev
      #      cd axmouth.dev
      #      export HOST_GATEWAY=$(dig +short myip.opendns.com @resolver1.opendns.com)
      #      touch .env
      #      echo "BIND_ADDRESS=0.0.0.0:39051" >> .env
      #      echo "CAPTCHA_SECRET=$CAPTCHA_SECRET" >> .env
      #      echo 'CAPTCHA_VERIFY_URL=https://hcaptcha.com/siteverify' >> .env
      #      echo 'CONTACT_ADDRESS=$CONTACT_ADDRESS' >> .env
      #      echo "DATABASE_URL=$DATABASE_URL" >> .env
      #      echo "JWT_SECRET=$JWT_SECRET" >> .env
      #      echo "JWT_DURATION=500" >> .env
      #      echo 'MAIL_FROM_ADDRESS=noreply@axmouth.dev' >> .env
      #      echo 'MAIL_FROM_NAME="Dragonfly"' >> .env
      #      echo "MAIL_HOST=$MAIL_HOST" >> .env
      #      echo "MAIL_PASSWORD=$MAIL_PASSWORD" >> .env
      #      echo "MAIL_PORT=$MAIL_PORT" >> .env
      #      echo "MAIL_USERNAME=$MAIL_USERNAME" >> .env
      #      echo "RUST_LOG=backend_api=error" >> .env
      #      echo 'STATIC_FILE_DIR=/var/lib/axmouth/axmouth.dev/static-assets' >> .env
      #      echo 'STATIC_FILE_ADDRESS=https://axmouth.dev/static' >> .env
      #      echo 'WEBSITE_URL=axmouth.dev' >> .env
      #      docker-compose up -d --remove-orphans
