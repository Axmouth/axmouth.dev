name: CI

on: [push]

jobs:
  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Connect to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: echo derp

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Test ssh
        env:
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: ssh $SERVER_USERNAME@$SERVER_IP  "echo 'hello world'"
      - name: Create empty .env file
        run: touch .env
      - name: Use docker-compose to deploy remotely
        env:
          BIND_ADDRESS: 0.0.0.0:39051
          CAPTCHA_SECRET: ${{ secrets.CAPTCHA_SECRET }}
          CAPTCHA_VERIFY_URL: https://hcaptcha.com/siteverify
          CONTACT_ADDRESS: ${{ secrets.CONTACT_ADDRESS }}
          CONTAINER_NAME: axmouth.dev-postfix
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_DURATION: 500
          MAIL_FROM_ADDRESS: noreply@axmouth.dev
          MAIL_FROM_NAME: axmouth.dev
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          RUST_LOG: backend_api=error
          STATIC_FILE_DIR: /var/lib/axmouth/axmouth.dev/static-assets
          STATIC_FILE_ADDRESS: https://axmouth.dev/static
          WEBSITE_URL: axmouth.dev
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: DOCKER_HOST="ssh://$SERVER_USERNAME@$SERVER_IP:$SSH_PORT" docker-compose up --remove-orphans -d
